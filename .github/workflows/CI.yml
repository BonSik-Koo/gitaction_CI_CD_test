name: CI

# push, PR 이벤트 발생시 브랜치에서 발생하는 작업
on:
  push:
    branches:
      - feat/*
  pull_request:
    branches:
      - develop
      - feat/*

permissions: write-all

# 실행할 작업들
jobs:
  CI:
    #NCP Server 스펙을 최대한 맞추기 위해서
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 1234
        port:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      #JDK setting
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

#      #테스트 진행시 사용할 테스트 DB 세팅
#      - name: Setup MySQL
#        uses: samin/mysql-action@v1
#        with:
#          character set server: 'utf8'
#          mysql database: 'test'
#          mysql user: 'test'
#          mysql password: ${{ secrets.TEST_DB_PASSWORD }}

#      #테스트 application-test.yml 파일 생성
#      - name: create application-test.yml
#        run: |
#          cd ./src/main/resources
#          touch ./application-test.yml
#          echo "${{ secrets.PROPERTIES_TEST }}" >> ./application-test.yml
#        shell: bash

      # Gradle 권한 부여
      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      #테스트 하지 않고 빌드를 진행
      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      #테스트 진행
      - name: Test with Gradle
        run: ./gradlew clean test
        shell: bash

      - name: Publish Unit Test Result
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml